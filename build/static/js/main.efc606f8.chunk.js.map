{"version":3,"sources":["services/persons.js","components/App.js","index.js"],"names":["baseUrl","services_persons","axios","get","newObject","post","id","put","concat","delete","PersonDisplay","_ref","persons","setPersons","nameFilter","displayMessage","setMessage","filter","person","name","toLowerCase","includes","map","react_default","a","createElement","key","number","onClick","window","confirm","personService","then","response","p","catch","error","deletePerson","PersonForm","_ref2","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","personObject","some","find","updatedPerson","Object","objectSpread","data","value","onChange","target","type","Filter","_ref3","setNameFilter","Notification","_ref4","message","success","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","setSuccess","msg","duration","successful","setTimeout","useEffect","App_Notification","App_Filter","App_PersonForm","App_PersonDisplay","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.efc606f8.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst del = id => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {getAll, create, update, del}\n","import React, { useState, useEffect } from 'react'\nimport personService from '../services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ success, setSuccess ] = useState(true)\n\n  const displayMessage = (msg, duration, successful) => {\n    setSuccess(successful)\n    setMessage(msg, success)\n    setTimeout(() => {\n      setMessage(null)\n    }, duration)\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => setPersons(response.data))\n    }, [])\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n      <Notification message={message} success={success} />\n\n      <h2>Hakurajaus</h2>\n      <Filter nameFilter={nameFilter} setNameFilter={setNameFilter} />\n\n      <h2>Lisää uusi</h2>\n      <PersonForm newName={newName} setNewName={setNewName}\n                  newNumber={newNumber} setNewNumber={setNewNumber}\n                  persons={persons} setPersons={setPersons}\n                  displayMessage={displayMessage} />\n\n      <h2>Numerot</h2>\n      <PersonDisplay persons={persons}\n        setPersons={setPersons}\n        nameFilter={nameFilter}\n        setMessage={setMessage}\n        displayMessage= {displayMessage} />\n    </div>\n  )\n}\n\nconst PersonDisplay = ({persons, setPersons, nameFilter, setMessage, displayMessage}) => {\n  const deletePerson = (person) => {\n    if (window.confirm(`Haluatko poistaa henkilön ${person.name}?`)) {\n      personService\n      .del(person.id)\n      .then((response) => {\n        setPersons(persons.filter(p => p.id !== person.id))\n        displayMessage(`Henkilö ${person.name} poistettu.`, 3000, true)\n      })\n      .catch(error => {\n        setPersons(persons.filter(p => p.id !== person.id))\n        displayMessage(`Henkilö ${person.name} oli jo poistettu.`, 3000, false)\n      })\n    }\n  }\n  return persons\n        .filter(person => person.name.toLowerCase().includes(nameFilter))\n        .map(person =>\n          <div key={person.id}>\n            {person.name} {person.number}\n            <button onClick={() => deletePerson(person)}>Poista</button>\n          </div>)}\n\nconst PersonForm = ({newName, setNewName, newNumber, setNewNumber, persons, setPersons, displayMessage}) => {\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const addName = (event) => {\n    if (newName === '') {\n      return\n    }\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.some(p => p.name === newName && p.number === newNumber)) {\n      displayMessage(`${newName} on jo luettelossa.`, 3000, false)\n    } else if (persons.some(p => p.name === newName)) {\n      if (window.confirm(`${newName} on jo luettelossa. Korvataanko vanha numero uudella?`)) {\n        const person = persons.find(p => p.name === newName)\n        const updatedPerson = {...person, number: newNumber}\n        personService\n          .update(person.id, updatedPerson)\n          .then((response) => {\n            setPersons(persons.map(p => p.id === person.id ? updatedPerson : p))\n            setNewName('')\n            setNewNumber('')\n            displayMessage(`Henkilön ${person.name} numero muutettu.`, 3000, true)\n          })\n          .catch(error => {\n            setPersons(persons.filter(p => p.id !== person.id))\n            displayMessage(`Henkilö ${person.name} oli jo poistettu.`, 3000, false)\n          })\n      }\n    } else {\n      personService.create(personObject)\n        .then((response) => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n          displayMessage(`Henkilö ${response.data.name} lisätty.`, 3000, true)\n        })\n    }\n  }\n  return (\n    <div>\n      <form onSubmit={addName}>\n        <div>\n          nimi: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          numero: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">lisää</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst Filter = ({nameFilter, setNameFilter}) => {\n  const handleFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n  return (\n    <div>\n      rajaa näytettäviä: <input value={nameFilter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nconst Notification = ({ message, success }) => {\n  const successStyle = {\n    \"color\": \"green\",\n    \"background\": \"lightgrey\",\n    \"fontSize\": \"20px\",\n    \"borderStyle\": \"solid\",\n    \"borderRadius\": \"5px\",\n    \"padding\": \"10px\",\n    \"marginBottom\": \"10px\"\n  }\n  const errorStyle = {\n    \"color\": \"red\",\n    \"background\": \"lightgrey\",\n    \"fontSize\": \"20px\",\n    \"borderStyle\": \"solid\",\n    \"borderRadius\": \"5px\",\n    \"padding\": \"10px\",\n    \"marginBottom\": \"10px\"\n  }\n\n  if (message === null) {\n    return null\n  }\n\n  if (success) {\n    return (\n      <div style={successStyle}>\n        {message}\n      </div>\n    )\n  }\n  return (\n    <div style={errorStyle}>\n      {message}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}